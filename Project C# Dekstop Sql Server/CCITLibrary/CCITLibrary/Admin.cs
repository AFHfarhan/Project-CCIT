using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.SqlClient;

namespace CCITLibrary
{
    public partial class Admin : Form
    {
        public Admin()
        {
            InitializeComponent();
            cmbkja.Items.Add("--Pilih Jenis Admin--");
            cmbkja.Items.Add("Admin");
            cmbkja.Items.Add("Pustakawan");

            cmbkja_ubah.Items.Add("--Pilih Jenis Admin--");
            cmbkja_ubah.Items.Add("Admin");
            cmbkja_ubah.Items.Add("Pustakawan");

            txtnama_hapus.Enabled = false;
        }

        Koneksi conn = new Koneksi();
        SqlConnection koneksi;
        SqlDataAdapter adapter = new SqlDataAdapter();
        DataSet ds = new DataSet();
        string sql = null;
        DataView dv;
        private void pictureBox1_Click(object sender, EventArgs e)
        {
            MenuUtama mu = new MenuUtama();
            mu.Show();
            this.Hide();
        }

        private void button2_Click(object sender, EventArgs e)
        {
            koneksi = conn.con();
            koneksi.Open();
            String id_admin = txtidadmin_hapus.Text;
            string nama = txtnama_hapus.Text;
            var peringatan = MessageBox.Show("Apakah Anda Ingin Benar-Benar Menghapus Data Ini!", "Peringatan", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (peringatan == DialogResult.Yes)
            {
                SqlCommand sqldelete = new SqlCommand("delete from tb_Admin WHERE id_admin = @id_admin", koneksi);
                using (sqldelete)
                {
                    sqldelete.Parameters.AddWithValue("@nama", nama);
                    sqldelete.Parameters.AddWithValue("@id_admin", id_admin);
                    int result = sqldelete.ExecuteNonQuery();
                    if (result != 0)
                    {
                        adapter = new SqlDataAdapter("select * from tb_Admin order by id_admin desc", koneksi);
                        DataTable dtMember = new DataTable();
                        sqldelete.ExecuteNonQuery();
                        dataGridView1.DataSource = dtMember;
                        dataGridView4.DataSource = dtMember;
                        dataGridView6.DataSource = dtMember;
                        adapter.SelectCommand.ExecuteNonQuery();
                        adapter.Fill(dtMember);
                        MessageBox.Show("Data Member Berhasil Dihapus!");
                        koneksi.Close();
                        hapus_admin();
                    }
                    else
                    {
                        MessageBox.Show("Data Member Gagal Dihapus!");
                    }
                }
            }
        }
        public void no_edit()
        {
            txtnama_ubah.Enabled = false;
            txtpswd_ubah.Enabled = false;
            txtpswd2_ubah.Enabled = false;
            txtpswd1_ubah.Enabled = false;
            txttelp_ubah.Enabled = false;
            cmbkja_ubah.Enabled = false;
            rbt3.Enabled = false;
            rbt4.Enabled = false;
            txtidadmin_ubah.Enabled = true;
            btn_adminedit.Enabled = true;
            btnbatal.Enabled = false;
            btnubah.Enabled = false;

            txtnama_ubah.Text = "";
            txttelp_ubah.Text = "";
            txtpswd_ubah.Text = "";
            txtpswd1_ubah.Text = "";
            txtpswd2_ubah.Text = "";
            txtpswd_ubah.Text = "";
            txtpswdpancingan.Text = "";
            cmbkja_ubah.SelectedIndex = 0;
       }
        private void Admin_Load(object sender, EventArgs e)
        {
            cmbkja.SelectedIndex = 0;
            no_edit();
            hapus_admin();

            AutoGeneratedID autoid = new AutoGeneratedID();
            string id_admin = autoid.AutoIDAdmin();
            txtid.Text = id_admin;
            txtid.ReadOnly = true;
            try
            {
                koneksi = conn.con();
                koneksi.Open();
                sql = "Select distinct id_admin, nama, jenis_kelamin, jenis_admin, telepon, status from tb_Admin order by id_admin desc";
                adapter.SelectCommand = new SqlCommand(sql, koneksi);
                adapter.Fill(ds, "Member");
                dv = new DataView();
                dv.Table = ds.Tables[0];
                dataGridView1.DataSource = dv;
                dataGridView4.DataSource = dv;
                dataGridView6.DataSource = dv;
                koneksi.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            finally
            {
                koneksi.Close();
            }
        }

        public void hapus()
        {
            txtnama.Text = "";
            txttelp.Text = "";
            txtpswd.Text = "";
            txtpswd1.Text = "";
            cmbkja.SelectedIndex = 0;
            rbt1.Checked = false;
            rbt2.Checked = false;
        }
        public void edit()
        {
            txtnama_ubah.Enabled = true;
            txtpswd_ubah.Enabled = true;
            txtpswd2_ubah.Enabled = true;
            txtpswd1_ubah.Enabled = true;
            txttelp_ubah.Enabled = true;
            cmbkja_ubah.Enabled = true;
            rbt3.Enabled = true;
            rbt4.Enabled = true;
            txtidadmin_ubah.Enabled = false;
            btn_adminedit.Enabled = false;
            btnbatal.Enabled = true;
            btnubah.Enabled = true;
        }
        private void btnsimpan_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtnama.Text == "")
                {
                    errorProvider1.Clear();
                    errorProvider1.SetError(txtnama, "Nama Harus Diisi!");
                    var warning = MessageBox.Show("Nama Harus Diisi!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                    if (warning == DialogResult.Cancel)
                    {
                        errorProvider1.Clear();
                        hapus();
                    }
                }
                else if (txttelp.Text == "")
                {
                    errorProvider1.Clear();
                    errorProvider1.SetError(txttelp, "Telp Harus Diisi!");
                    var warning = MessageBox.Show("Telp Harus Diisi!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                    if (warning == DialogResult.Cancel)
                    {
                        errorProvider1.Clear();
                        hapus();
                    }
                }
                else if (txtpswd.Text == "")
                {
                    errorProvider1.Clear();
                    errorProvider1.SetError(txtpswd, "Password Harus Diisi!");
                    var warning = MessageBox.Show("Password Harus Diisi!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                    if (warning == DialogResult.Cancel)
                    {
                        errorProvider1.Clear();
                        hapus();
                    }
                }
                else if (cmbkja.SelectedIndex == 0)
                {
                    errorProvider1.Clear();
                    errorProvider1.SetError(cmbkja, "Jenis Admin Harus Dipilih!");
                    var warning = MessageBox.Show("Jenis Admin Harus Dipilih!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                    if (warning == DialogResult.Cancel)
                    {
                        errorProvider1.Clear();
                        hapus();
                    }
                }
                else if (txtpswd.Text != txtpswd1.Text)
                {
                    errorProvider1.Clear();
                    errorProvider1.SetError(txtpswd1, "Password Tidak Sama!");
                    var warning = MessageBox.Show("Password Tidak Sama!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                    if (warning == DialogResult.Cancel)
                    {
                        errorProvider1.Clear();
                        hapus();
                    }
                }
                else
                {
                    string status = "No";
                    string jk = "";
                    if (rbt1.Checked || rbt2.Checked)
                    {
                        if (rbt1.Checked)
                        {
                            jk = "Pria";
                        }
                        else
                        {
                            jk = "Wanita";
                        }
                        koneksi = conn.con();
                        koneksi.Open();
                        SqlCommand command = new SqlCommand("insert into tb_Admin (id_admin, nama, jenis_kelamin, jenis_admin, telepon, password, status) values ('" + txtid.Text + "','" + txtnama.Text + "','" + jk + "','" + cmbkja.SelectedItem + "','" + txttelp.Text + "','" + txtpswd.Text + "','" + status + "');", koneksi);
                        adapter = new SqlDataAdapter("select * from tb_Admin order by id_admin desc", koneksi);
                        DataTable dtMember = new DataTable();
                        command.ExecuteNonQuery();
                        dataGridView1.DataSource = dtMember;
                        dataGridView4.DataSource = dtMember;
                        dataGridView6.DataSource = dtMember;
                        adapter.SelectCommand.ExecuteNonQuery();
                        adapter.Fill(dtMember);
                        MessageBox.Show("Data Admin Berhasil Ditambah!");
                        AutoGeneratedID autoid = new AutoGeneratedID();
                        string id_admin = autoid.AutoIDAdmin();
                        txtid.Text = id_admin;
                        txtid.ReadOnly = true;
                        hapus();
                        koneksi.Close();
                        errorProvider1.Clear();
                    }
                    else
                    {
                        errorProvider1.Clear();
                        errorProvider1.SetError(rbt1, "Jenis Kelamin Harus Dipilih!");
                        var warning = MessageBox.Show("Jenis Kelamin Harus Dipilih!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                        if (warning == DialogResult.Cancel)
                        {
                            errorProvider1.Clear();
                            hapus();
                        }
                    }
                }
            }
            catch (SqlException se)
            {
                MessageBox.Show(se.Message);
            }
        }

        public bool BindRadio(string gender)
        {

            bool result = false;
            if (gender == "Pria")
            {
                result = true;
            }
            return result;
        }
        private void btn_adminedit_Click(object sender, EventArgs e)
        {
            SqlParameter sqlP;

            koneksi = conn.con();
            koneksi.Open();
                String id_admin = txtidadmin_ubah.Text;
                SqlCommand command = new SqlCommand("SELECT * FROM tb_Admin WHERE id_admin = @id_admin", koneksi);
                sqlP = command.Parameters.Add("@id_admin", SqlDbType.VarChar, 15);
                sqlP.Value = id_admin;
                try
                {
                    SqlDataReader reader = command.ExecuteReader();
                    while (reader.Read())
                    {
                        txtnama_ubah.Text = reader[1].ToString();
                        cmbkja_ubah.SelectedItem = reader[3].ToString();
                        txttelp_ubah.Text = reader[4].ToString();
                        txtpswdpancingan.Text = reader[5].ToString();
                        bool result = BindRadio(reader[2].ToString());
                        if (result)
                        {
                            rbt3.Select();
                        }
                        else
                        {
                            rbt4.Select();
                        }
                        edit();
                    }
                }
                catch (Exception)
                {
                    MessageBox.Show("Gagal");
                }
                finally
                {
                    koneksi.Close();
                }
            }

        private void btnubah_Click(object sender, EventArgs e)
        {
            try
            {   
            if (txtpswd_ubah.Text != txtpswdpancingan.Text)
            {
                errorProvider1.Clear();
                errorProvider1.SetError(txtpswd_ubah, "Password Tidak Sama Dengan Password Lama!");
                var warning = MessageBox.Show("Password Tidak Sama Dengan Password Lama!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                if (warning == DialogResult.Cancel)
                {
                    errorProvider1.Clear();
                    no_edit();
                }
            }
            else if (txtpswd1_ubah.Text == "")
            {
                errorProvider1.Clear();
                errorProvider1.SetError(txtpswd1_ubah, "Password Tidak Boleh Kosong!");
                var warning = MessageBox.Show("Password Tidak Boleh Kosong!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                if (warning == DialogResult.Cancel)
                {
                    errorProvider1.Clear();
                    no_edit();
                }
            }
            else if (txtpswd1_ubah.Text != txtpswd2_ubah.Text)
            {
                errorProvider1.Clear();
                errorProvider1.SetError(txtpswd2_ubah, "Password Tidak Sama!");
                var warning = MessageBox.Show("Password Tidak Sama!", "Perhatian", MessageBoxButtons.RetryCancel, MessageBoxIcon.Warning);
                if (warning == DialogResult.Cancel)
                {
                    errorProvider1.Clear();
                    no_edit();
                }
            }
            else
            {
                string status = "No";
                string id = txtidadmin_ubah.Text;
                string nama = txtnama_ubah.Text;
                string ja = cmbkja_ubah.SelectedItem.ToString();
                string telp = txttelp_ubah.Text;
                string pswd1 = txtpswd1_ubah.Text;
                String jk = null;
                if (rbt3.Checked)
                {
                    jk = "Pria";
                }
                if (rbt4.Checked)
                {
                    jk = "Wanita";
                }
                koneksi = conn.con();
                koneksi.Open();
                var peringatan = MessageBox.Show("Apakah Anda Ingin Benar-Benar Mengubah Data Ini!", "Peringatan", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (peringatan == DialogResult.Yes)
                {
                    try
                    {
                        SqlCommand sqlupdate = new SqlCommand("update tb_Admin set nama = @nama,  jenis_kelamin = @jk, jenis_admin = @ja, telepon = @telp, password = @pswd1, status = @status where id_admin = @id", koneksi);
                        using (sqlupdate)
                        {
                            sqlupdate.Parameters.AddWithValue("@nama", nama);
                            sqlupdate.Parameters.AddWithValue("@jk", jk);
                            sqlupdate.Parameters.AddWithValue("@ja", ja);
                            sqlupdate.Parameters.AddWithValue("@telp", telp);
                            sqlupdate.Parameters.AddWithValue("@pswd1", pswd1);
                            sqlupdate.Parameters.AddWithValue("@status", status);
                            sqlupdate.Parameters.AddWithValue("@id", id);
                            int result = sqlupdate.ExecuteNonQuery();
                            if (result != 0)
                            {
                                adapter = new SqlDataAdapter("select * from tb_Admin order by id_admin desc", koneksi);
                                DataTable dtMember = new DataTable();
                                sqlupdate.ExecuteNonQuery();
                                dataGridView1.DataSource = dtMember;
                                dataGridView4.DataSource = dtMember;
                                dataGridView6.DataSource = dtMember;
                                adapter.SelectCommand.ExecuteNonQuery();
                                adapter.Fill(dtMember);
                                MessageBox.Show("Data Member Berhasil Diubah!");
                                no_edit();
                                koneksi.Close();
                            }
                            else
                            {
                                MessageBox.Show("Data Admin Gagal Diubah!");
                            }
                        }
                    }
                    catch (Exception)
                    {
                        MessageBox.Show("Gagal");
                    }
                    finally
                    {
                        koneksi.Close();
                    }
                }
            }
            }
            catch (Exception)
            {
                MessageBox.Show("Gagal");
            }
            finally
            {
                koneksi.Close();
            }
        }

        private void btnbatal_Click(object sender, EventArgs e)
        {
            no_edit();
        }

        public void hapus_admin()
        {
            txtidadmin_hapus.Text = "";
            txtnama_hapus.Text = "";
            btncari_hapus.Enabled = true;
            txtidadmin_hapus.Enabled = true;
            btnhapus_hapus.Enabled = false;
            btnbatal_hapus.Enabled = false;
        }
        public void hapus_admin1()
        {
            btncari_hapus.Enabled = false;
            txtidadmin_hapus.Enabled = false;
            btnhapus_hapus.Enabled = true;
            btnbatal_hapus.Enabled = true;
        }
        private void btncari_hapus_Click(object sender, EventArgs e)
        {

            SqlParameter sqlP;

            koneksi = conn.con();
            koneksi.Open();
            String id_admin = txtidadmin_hapus.Text;
            SqlCommand command = new SqlCommand("SELECT * FROM tb_Admin WHERE id_admin = @id_admin", koneksi);
            sqlP = command.Parameters.Add("@id_admin", SqlDbType.VarChar, 15);
            sqlP.Value = id_admin;
            try
            {
                SqlDataReader reader = command.ExecuteReader();
                while (reader.Read())
                {
                    txtnama_hapus.Text = reader[1].ToString();
                    hapus_admin1();
                }
            }
            catch (Exception)
            {
                MessageBox.Show("Gagal");
            }
            finally
            {
                koneksi.Close();
            }
        }

        private void btnbatal_hapus_Click(object sender, EventArgs e)
        {
            hapus_admin();
        }
    }
}
