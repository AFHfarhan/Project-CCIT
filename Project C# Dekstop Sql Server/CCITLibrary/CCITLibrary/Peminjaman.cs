using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.IO;

namespace CCITLibrary
{
    public partial class Peminjaman : Form
    {
        public Peminjaman()
        {
            InitializeComponent();
            cbkstatus.Items.Add("Belum Dikembalikan");
            cbkstatus.Items.Add("Sudah Dikembalikan");
        }

        Koneksi conn = new Koneksi();
        SqlConnection koneksi;
        SqlDataAdapter adapter = new SqlDataAdapter();
        DataSet ds = new DataSet();
        string sql = null;
        DataView dv;

        private void pictureBox1_Click(object sender, EventArgs e)
        {
            MenuUtama mu = new MenuUtama();
            mu.Show();
            this.Hide();
        }

        public void reset()
        {
            textBox1.Enabled = false;
            textBox2.Text = "";
            textBox5.Text = "";
            textBox6.Text = "";
            textBox3.Text = "";
            textBox4.Text = "";
            dateTimePicker1.Enabled = false;
            dateTimePicker2.Enabled = false;
            btnbatal_tambah.Enabled = false;
            btnsimpan_tambah.Enabled = false;
            btntambah.Enabled = false;
            btnreset_tambah.Enabled = false;
        }
        public void resetpengembalian()
        {
            txtcarinim.Text = "";
            txtidp.Text = "";
            txtidm.Text = "-";
            txtnama.Text = "-";
            cbkstatus.Text = "";
            txtpengembalian.Text = "";
            txtpeminjaman.Text = "";
            txtpinalty.Text = "";

            cbkstatus.Enabled = false;
            btnedit.Enabled = false;
            btnbatal_edit.Enabled = false;
            txtpinalty.Enabled = false;
            btncari.Enabled = true;
            txtcarinim.Enabled = true;
            button3.Enabled = false;
            button4.Enabled = false;
        }
        private void Peminjaman_Load(object sender, EventArgs e)
        {
            // TODO: This line of code loads data into the 'cCIT_LibraryDataSet4.tb_Peminjaman' table. You can move, or remove it, as needed.
            this.tb_PeminjamanTableAdapter.Fill(this.cCIT_LibraryDataSet4.tb_Peminjaman);
            resetpengembalian();
            textBox2.Enabled = false;
            btncari_tambah.Enabled = false;
            button2.Enabled = false;
            reset();
            AutoGeneratedID auto = new AutoGeneratedID();
            string id = auto.AutoIDPeminjaman();
            textBox1.Text = id;
            try
            {
                koneksi = conn.con();
                koneksi.Open();
                sql = "Select p.id_peminjaman_detail, m.nama, p.status from tb_Peminjaman_Details p join tb_Member m on m.id_member = p.id_member where m.id_member = p.id_member order by id_peminjaman_detail desc";
                adapter.SelectCommand = new SqlCommand(sql, koneksi);
                adapter.Fill(ds, "Peminjaman Detail");
                dv = new DataView();
                dv.Table = ds.Tables[0];
                dataGridView2.DataSource = dv;
                dataGridView3.DataSource = dv;
                koneksi.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            finally
            {
                koneksi.Close();
            }
        }

        public void loadpeminjamandetail()
        {
            SqlDataAdapter adapter1 = new SqlDataAdapter();
            DataSet ds1 = new DataSet();
            string sql1 = null;
            DataView dv1;
            try
            {
                koneksi = conn.con();
                koneksi.Open();
                sql1 = "Select p.id_peminjaman_detail, m.nama, p.status from tb_Peminjaman_Details p join tb_Member m on m.id_member = p.id_member where m.id_member = p.id_member order by id_peminjaman_detail desc";
                adapter1.SelectCommand = new SqlCommand(sql1, koneksi);
                adapter.Fill(ds1, "Peminjaman Detail");
                dv1 = new DataView();
                dv1.Table = ds1.Tables[0];
                dataGridView3.DataSource = dv1;
                koneksi.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            finally
            {
                koneksi.Close();
            }
        }

        public void loadpeminjaman()
        {
            SqlDataAdapter adapter2 = new SqlDataAdapter();
            DataSet ds2 = new DataSet();
            string sql2 = null;
            DataView dv2;
            try
            {
                koneksi = conn.con();
                koneksi.Open();
                sql2 = "select * from tb_Peminjaman order by id_peminjaman desc";
                adapter2.SelectCommand = new SqlCommand(sql2, koneksi);
                adapter.Fill(ds2, "Peminjaman");
                dv2 = new DataView();
                dv2.Table = ds2.Tables[0];
                dataGridView4.DataSource = dv2;
                koneksi.Close();
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
            finally
            {
                koneksi.Close();
            }
        }
        private void btncari_tambah_Click(object sender, EventArgs e)
        {
            dateTimePicker1.Enabled = true;
            dateTimePicker2.Enabled = true;
            btnbatal_tambah.Enabled = true;
            btntambah.Enabled = true;
            textBox3.Text = "0";

            SqlParameter sqlP;

            koneksi = conn.con();
            koneksi.Open();
            String id_buku = textBox2.Text;
            SqlCommand command = new SqlCommand("SELECT * FROM tb_Buku WHERE id_buku = @id_buku", koneksi);
            sqlP = command.Parameters.Add("@id_buku", SqlDbType.VarChar, 5);
            sqlP.Value = id_buku;
            try
            {
                SqlDataReader reader = command.ExecuteReader();
                if(reader.Read())
                {
                    textBox5.Text = reader[1].ToString();
                    textBox6.Text = reader[10].ToString();
                }
                    else
                    {
                        MessageBox.Show("Data Tidak Ditemukan!");
                        textBox4.Text = "";
                        reset();
                    }
                koneksi.Close();
            }
            catch (Exception)
            {
                MessageBox.Show("Gagal");
            }
            finally
            {
                koneksi.Close();
            }

            FileStream fs = new FileStream("tempadmin.txt", FileMode.Open, FileAccess.Read);
            StreamReader sr = new StreamReader(fs);

            string line = sr.ReadLine();
            textBox4.Text = line;

            sr.Close();
            fs.Close();
        }

        private void btnbatal_tambah_Click(object sender, EventArgs e)
        {
            reset();
            textBox2.Text = "";
        }

        private void button1_Click(object sender, EventArgs e)
        {
            SqlParameter sqlP;

            koneksi = conn.con();
            koneksi.Open();
            String id_member = textBox7.Text;
            SqlCommand command = new SqlCommand("SELECT * FROM tb_Member WHERE id_member = @id_member", koneksi);
            sqlP = command.Parameters.Add("@id_member", SqlDbType.VarChar, 15);
            sqlP.Value = id_member;
            try
            {
                SqlDataReader reader = command.ExecuteReader();
                while (reader.Read())
                {
                    string id = reader[0].ToString();
                    if (id == "")
                    {
                        MessageBox.Show("Id Member Belum Teraftar!");
                    }
                    else if (textBox6.Text == "0")
                    {
                        MessageBox.Show("Stock Buku Sudah Habis!");
                    }
                    else
                    {
                        dateTimePicker1.Enabled = false;
                        dateTimePicker2.Enabled = false;
                        tambah();
                        loadpeminjaman();
                    }
                }
            }
            catch (Exception)
            {
                MessageBox.Show("Gagal");
            }
            finally
            {
                koneksi.Close();
            }
        }
        public void tambah()
        {
            koneksi = conn.con();
            koneksi.Close();
            string pinjam = dateTimePicker1.Value.ToString("yyyy-MM-dd");
            string kembali = dateTimePicker2.Value.ToString("yyyy-MM-dd");
            SqlCommand sqlinsert = new SqlCommand("insert into tb_Temp_Peminjaman (id_peminjaman, id_member, id_buku, tgl_peminjaman, tgl_pengembalian, pinalty, id_admin) values ('" + textBox1.Text + "','" + textBox7.Text + "','" + textBox2.Text + "','" + pinjam + "','" + kembali + "','" + textBox3.Text + "','" + textBox4.Text + "');", koneksi);
            adapter = new SqlDataAdapter("select p.id_peminjaman, m.nama, b.judul_buku, p.tgl_peminjaman, p.tgl_pengembalian, p.pinalty, a.nama from tb_Temp_Peminjaman p join tb_Admin a on a.id_admin = p.id_admin join tb_Member m on p.id_member = m.id_member join tb_Buku b on p.id_buku = b.id_buku where a.id_admin = p.id_admin order by id_peminjaman desc", koneksi);
            DataTable dtpeminjaman = new DataTable();
            koneksi.Open();
            sqlinsert.ExecuteNonQuery();
            dataGridView1.DataSource = dtpeminjaman;
            adapter.SelectCommand.ExecuteNonQuery();
            adapter.Fill(dtpeminjaman);
            MessageBox.Show("Data Peminjaman Berhasil Ditambah!");
            koneksi.Close();
            koneksi.Open();
            string id = textBox2.Text;
            string stock = textBox6.Text;
            int kurang_stock = Convert.ToInt16(stock) - 1;
            string hasil = kurang_stock.ToString();
            SqlCommand sqlupdate = new SqlCommand("update tb_Buku set stok = @hasil where id_buku = @id", koneksi);
            using (sqlupdate)
            {
                sqlupdate.Parameters.AddWithValue("@hasil", hasil);
                sqlupdate.Parameters.AddWithValue("@id", id);
                int result = sqlupdate.ExecuteNonQuery();
                    if (result != 0 )
                    {
                        MessageBox.Show("Sukses!");
                    }
            }
            reset();
            btnsimpan_tambah.Enabled = true;
            btnreset_tambah.Enabled = true;
            koneksi.Close();
        }

        private void btnreset_tambah_Click(object sender, EventArgs e)
        {
            reset();
            button1.Enabled = true;
            textBox2.Enabled = false;
            textBox7.Enabled = true;
            textBox7.Text = "";
            label13.Text = "-";
            btncari_tambah.Enabled = false;
            button2.Enabled = false;
            koneksi = conn.con(); 
            SqlCommand sqltruncate = new SqlCommand("truncate table tb_Temp_Peminjaman", koneksi);
            koneksi.Open();
            sqltruncate.ExecuteNonQuery();
            adapter = new SqlDataAdapter("select * from tb_Temp_Peminjaman order by id_peminjaman desc", koneksi);
            DataTable dtpeminjaman = new DataTable();
            dataGridView1.DataSource = dtpeminjaman;
            adapter.SelectCommand.ExecuteNonQuery();
            adapter.Fill(dtpeminjaman);
        }

        private void btnsimpan_tambah_Click(object sender, EventArgs e)
        {
            koneksi = conn.con();
            SqlCommand sqlinserttemp = new SqlCommand("insert into tb_Peminjaman select * from tb_Temp_Peminjaman where id_peminjaman = '" + textBox1.Text + "'", koneksi);
            SqlCommand sqltruncate = new SqlCommand("truncate table tb_Temp_Peminjaman", koneksi);
            koneksi.Open();
            sqlinserttemp.ExecuteNonQuery();
            sqltruncate.ExecuteNonQuery();
            adapter = new SqlDataAdapter("select * from tb_Temp_Peminjaman order by id_peminjaman desc", koneksi);
            DataTable dtpeminjaman = new DataTable();
            dataGridView1.DataSource = dtpeminjaman;
            adapter.SelectCommand.ExecuteNonQuery();
            adapter.Fill(dtpeminjaman);
            MessageBox.Show("Berhasil Di Simpan!");
            koneksi.Close();
            simpandetails();
            loadpeminjamandetail();
            loadpeminjaman();
        }

        public void simpandetails()
        {
            koneksi = conn.con();
            string status = "Belum Dikembalikan";
            SqlCommand sqlsimpan = new SqlCommand("insert into tb_Peminjaman_Details (id_peminjaman_detail, id_member, status) values ('" + textBox1.Text + "','" + textBox7.Text + "','" + status + "');", koneksi);
            koneksi.Open();
            sqlsimpan.ExecuteNonQuery();
            adapter = new SqlDataAdapter("select * from tb_Peminjaman_Details order by id_peminjaman_detail desc", koneksi);
            DataTable dtpeminjaman1 = new DataTable();
            dataGridView2.DataSource = dtpeminjaman1;
            adapter.SelectCommand.ExecuteNonQuery();
            adapter.Fill(dtpeminjaman1);
            MessageBox.Show("Data Peminjaman Berhasil Ditambah!");
            AutoGeneratedID autoid = new AutoGeneratedID();
            string id_p = autoid.AutoIDPeminjaman();
            textBox1.Text = id_p;
            koneksi.Close();
        }

        private void button1_Click_1(object sender, EventArgs e)
        {
            cekterdaftarpeminjam();
        }
        public void cekterdaftarpeminjam()
        {
            SqlParameter sqlP;

            koneksi = conn.con();
            koneksi.Open();
            String id_member = textBox7.Text;
            SqlCommand command1 = new SqlCommand("SELECT * FROM tb_Peminjaman_Details WHERE id_member = @id_member", koneksi);
            sqlP = command1.Parameters.Add("@id_member", SqlDbType.VarChar, 15);
            sqlP.Value = id_member;
            SqlDataReader reader1 = command1.ExecuteReader();
            if (reader1.Read())
            {
                label24.Text = reader1[2].ToString();
                if (label24.Text != "Belum Dikembalikan")
                {
                    cekmember();
                    textBox2.Enabled = true;
                    btncari_tambah.Enabled = true;
                    textBox7.Enabled = false;
                    button1.Enabled = false;
                    button2.Enabled = true;
                }
                else
                {
                    MessageBox.Show("ID sudah meminjam buku, tidak bisa meminjam lagi, sebelum mengembalikan buku sebelumnya!");
                    label24.Text = "";
                }
            }
            else
            {
                cekmember();
            }
        }
        public void cekmember()
        {
            SqlParameter sqlP;

            koneksi = conn.con();
            koneksi.Open();
            String id_member = textBox7.Text;
            SqlCommand command = new SqlCommand("SELECT * FROM tb_Member WHERE id_member = @id_member", koneksi);
            sqlP = command.Parameters.Add("@id_member", SqlDbType.VarChar, 15);
            sqlP.Value = id_member;
            try
            {
                SqlDataReader reader = command.ExecuteReader();
                if (reader.Read())
                {
                    label13.Text = reader[2].ToString();
                    textBox2.Enabled = true;
                    btncari_tambah.Enabled = true;
                    textBox7.Enabled = false;
                    button1.Enabled = false;
                    button2.Enabled = true;
                }
                else
                {
                    MessageBox.Show("Tidak Ditemukan ID Member! " + id_member);
                }
            }
            catch (Exception)
            {
                MessageBox.Show("Gagal");
            }
            finally
            {
                koneksi.Close();
            }
        }

        private void button2_Click(object sender, EventArgs e)
        {
            textBox7.Text = "";
            label13.Text = "-";
            button1.Enabled = true;
            textBox2.Enabled = false;
            textBox7.Enabled = true;
            btncari_tambah.Enabled = false;
            button2.Enabled = false;
            reset();
        }

        private void button3_Click(object sender, EventArgs e)
        {

        }

        private void btncari_Click(object sender, EventArgs e)
        {
            cbkstatus.Enabled = true;
            btnedit.Enabled = true;
            btnbatal_edit.Enabled = true;
            txtpinalty.Enabled = true;
            btncari.Enabled = false;
            txtcarinim.Enabled = false;
            SqlParameter sqlP;

            koneksi = conn.con();
            koneksi.Open();
            String nim = txtcarinim.Text;
            SqlCommand command = new SqlCommand("SELECT * FROM tb_Member WHERE NIM = @nim", koneksi);
            sqlP = command.Parameters.Add("@nim", SqlDbType.VarChar, 50);
            sqlP.Value = nim;
            try
            {
                SqlDataReader reader = command.ExecuteReader();
                if (reader.Read())
                {
                    txtidm.Text = reader[0].ToString();
                    txtnama.Text = reader[2].ToString();
                    button3.Enabled = true;
                }
                else
                {
                    MessageBox.Show("Data Tidak Ditemukan!");
                    resetpengembalian();
                    
                }
                koneksi.Close();
            }
            catch (Exception)
            {
            }
            finally
            {
                koneksi.Close();
            }
        }

        private void btnbatal_edit_Click(object sender, EventArgs e)
        {
            resetpengembalian();
        }

        public void cekpeminjaman()
        {
            SqlParameter sqlP;
            koneksi = conn.con();
            koneksi.Open();
            String id = txtidm.Text;
            SqlCommand cari = new SqlCommand("SELECT * FROM tb_Peminjaman WHERE id_member = @id", koneksi);
            sqlP = cari.Parameters.Add("@id", SqlDbType.VarChar, 5);
            sqlP.Value = id;
            SqlDataReader reader1 = cari.ExecuteReader();
            if (reader1.Read())
            {
                txtpeminjaman.Text = reader1[3].ToString();
                txtpengembalian.Text = reader1[4].ToString();
                txtpinalty.Text = reader1[5].ToString();
                txtidp.Text = reader1[0].ToString();
            }

        }

        public void cekpeminjaman1()
        {
            SqlParameter sqlP;
            koneksi = conn.con();
            koneksi.Open();
            String id = txtidp.Text;
            SqlCommand cari = new SqlCommand("SELECT * FROM tb_Peminjaman_Details WHERE id_peminjaman_detail = @id", koneksi);
            sqlP = cari.Parameters.Add("@id", SqlDbType.VarChar, 5);
            sqlP.Value = id;

            SqlDataReader reader2 = cari.ExecuteReader();
            if (reader2.Read())
            {
                cbkstatus.Text = reader2[2].ToString();
            }
        }
        private void button3_Click_1(object sender, EventArgs e)
        {
            cekpeminjaman();
            button4.Enabled = true;
        }

        private void button4_Click(object sender, EventArgs e)
        {
            cekpeminjaman1();
        }

        private void dataGridView4_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {

        }

        private void btnedit_Click(object sender, EventArgs e)
        {
            koneksi = conn.con();
            koneksi.Open();
            string status = cbkstatus.SelectedItem.ToString();
            string id = txtidp.Text;
            string id_member = txtidm.Text;
            string pinalty = txtpinalty.Text;
            var peringatan = MessageBox.Show("Apakah Anda Ingin Benar-Benar Mengubah Data Ini!", "Peringatan", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (peringatan == DialogResult.Yes)
            {
                try
                {
                    SqlCommand sqlupdate = new SqlCommand("update tb_Peminjaman_Details set id_member = id_member, status = @status where id_peminjaman_detail = @id", koneksi);
                    using (sqlupdate)
                    {
                        sqlupdate.Parameters.AddWithValue("@status", status);
                        sqlupdate.Parameters.AddWithValue("@id_member", id_member);
                        sqlupdate.Parameters.AddWithValue("@id", id);
                        int result = sqlupdate.ExecuteNonQuery();
                        if (result != 0)
                        {
                            loadpeminjamandetail();
                            resetpengembalian();
                            koneksi.Open();
                            SqlCommand sqlupdate1 = new SqlCommand("update tb_Peminjaman set pinalty = @pinalty where id_peminjaman = @id", koneksi);
                            using (sqlupdate1)
                            {
                                sqlupdate1.Parameters.AddWithValue("@pinalty", pinalty);
                                sqlupdate1.Parameters.AddWithValue("@id", id);
                                int result1 = sqlupdate1.ExecuteNonQuery();
                                if (result1 != 0)
                                {
                                    loadpeminjaman();
                                    koneksi.Close();
                                    resetpengembalian();
                                    MessageBox.Show("Data Peminjaman Berhasil Diubah!");
                                }
                            }
                        }
                        else
                        {
                            MessageBox.Show("Data Peminjaman Gagal Diubah!");
                        }
                    }
                }
                catch (Exception)
                {
                    MessageBox.Show("Gagal");
                }
                finally
                {
                    koneksi.Close();
                }
            }
        }
    }
}
